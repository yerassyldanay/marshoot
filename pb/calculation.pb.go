// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculation.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CalculationRequestBody struct {
	Origin               string   `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Cities               []string `protobuf:"bytes,2,rep,name=cities,proto3" json:"cities,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculationRequestBody) Reset()         { *m = CalculationRequestBody{} }
func (m *CalculationRequestBody) String() string { return proto.CompactTextString(m) }
func (*CalculationRequestBody) ProtoMessage()    {}
func (*CalculationRequestBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_19d0cca94bb3180a, []int{0}
}

func (m *CalculationRequestBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculationRequestBody.Unmarshal(m, b)
}
func (m *CalculationRequestBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculationRequestBody.Marshal(b, m, deterministic)
}
func (m *CalculationRequestBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculationRequestBody.Merge(m, src)
}
func (m *CalculationRequestBody) XXX_Size() int {
	return xxx_messageInfo_CalculationRequestBody.Size(m)
}
func (m *CalculationRequestBody) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculationRequestBody.DiscardUnknown(m)
}

var xxx_messageInfo_CalculationRequestBody proto.InternalMessageInfo

func (m *CalculationRequestBody) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *CalculationRequestBody) GetCities() []string {
	if m != nil {
		return m.Cities
	}
	return nil
}

type CalculationResponseBody struct {
	Cities               []string `protobuf:"bytes,1,rep,name=cities,proto3" json:"cities,omitempty"`
	TotalDistance        int32    `protobuf:"varint,2,opt,name=total_distance,json=totalDistance,proto3" json:"total_distance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculationResponseBody) Reset()         { *m = CalculationResponseBody{} }
func (m *CalculationResponseBody) String() string { return proto.CompactTextString(m) }
func (*CalculationResponseBody) ProtoMessage()    {}
func (*CalculationResponseBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_19d0cca94bb3180a, []int{1}
}

func (m *CalculationResponseBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculationResponseBody.Unmarshal(m, b)
}
func (m *CalculationResponseBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculationResponseBody.Marshal(b, m, deterministic)
}
func (m *CalculationResponseBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculationResponseBody.Merge(m, src)
}
func (m *CalculationResponseBody) XXX_Size() int {
	return xxx_messageInfo_CalculationResponseBody.Size(m)
}
func (m *CalculationResponseBody) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculationResponseBody.DiscardUnknown(m)
}

var xxx_messageInfo_CalculationResponseBody proto.InternalMessageInfo

func (m *CalculationResponseBody) GetCities() []string {
	if m != nil {
		return m.Cities
	}
	return nil
}

func (m *CalculationResponseBody) GetTotalDistance() int32 {
	if m != nil {
		return m.TotalDistance
	}
	return 0
}

func init() {
	proto.RegisterType((*CalculationRequestBody)(nil), "pb.CalculationRequestBody")
	proto.RegisterType((*CalculationResponseBody)(nil), "pb.CalculationResponseBody")
}

func init() {
	proto.RegisterFile("calculation.proto", fileDescriptor_19d0cca94bb3180a)
}

var fileDescriptor_19d0cca94bb3180a = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0x4e, 0xcc, 0x49,
	0x2e, 0xcd, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a,
	0x48, 0x52, 0xf2, 0xe0, 0x12, 0x73, 0x46, 0x48, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x38,
	0xe5, 0xa7, 0x54, 0x0a, 0x89, 0x71, 0xb1, 0xe5, 0x17, 0x65, 0xa6, 0x67, 0xe6, 0x49, 0x30, 0x2a,
	0x30, 0x6a, 0x70, 0x06, 0x41, 0x79, 0x20, 0xf1, 0xe4, 0xcc, 0x92, 0xcc, 0xd4, 0x62, 0x09, 0x26,
	0x05, 0x66, 0x90, 0x38, 0x84, 0xa7, 0x14, 0xc1, 0x25, 0x8e, 0x62, 0x52, 0x71, 0x41, 0x7e, 0x5e,
	0x71, 0x2a, 0xcc, 0x28, 0xa8, 0x16, 0x46, 0x64, 0x2d, 0x42, 0xaa, 0x5c, 0x7c, 0x25, 0xf9, 0x25,
	0x89, 0x39, 0xf1, 0x29, 0x99, 0xc5, 0x25, 0x89, 0x79, 0xc9, 0xa9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a,
	0xac, 0x41, 0xbc, 0x60, 0x51, 0x17, 0xa8, 0xa0, 0x51, 0x3a, 0x97, 0x10, 0x92, 0xc9, 0xc1, 0xa9,
	0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0x81, 0x5c, 0x22, 0x30, 0xd1, 0x54, 0xff, 0x82, 0x92, 0xcc,
	0xdc, 0xc4, 0x9c, 0x80, 0xc4, 0x92, 0x0c, 0x21, 0x29, 0xbd, 0x82, 0x24, 0x3d, 0xec, 0x7e, 0x92,
	0x92, 0xc6, 0x90, 0x43, 0xb8, 0x52, 0x89, 0xc1, 0x89, 0x25, 0x8a, 0xa9, 0x20, 0x29, 0x89, 0x0d,
	0x1c, 0x3a, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe6, 0x36, 0x2f, 0x56, 0x32, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalculationServiceClient is the client API for CalculationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculationServiceClient interface {
	CalculateOptimalPath(ctx context.Context, in *CalculationRequestBody, opts ...grpc.CallOption) (*CalculationResponseBody, error)
}

type calculationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCalculationServiceClient(cc grpc.ClientConnInterface) CalculationServiceClient {
	return &calculationServiceClient{cc}
}

func (c *calculationServiceClient) CalculateOptimalPath(ctx context.Context, in *CalculationRequestBody, opts ...grpc.CallOption) (*CalculationResponseBody, error) {
	out := new(CalculationResponseBody)
	err := c.cc.Invoke(ctx, "/pb.CalculationService/CalculateOptimalPath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculationServiceServer is the server API for CalculationService service.
type CalculationServiceServer interface {
	CalculateOptimalPath(context.Context, *CalculationRequestBody) (*CalculationResponseBody, error)
}

// UnimplementedCalculationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculationServiceServer struct {
}

func (*UnimplementedCalculationServiceServer) CalculateOptimalPath(ctx context.Context, req *CalculationRequestBody) (*CalculationResponseBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateOptimalPath not implemented")
}

func RegisterCalculationServiceServer(s *grpc.Server, srv CalculationServiceServer) {
	s.RegisterService(&_CalculationService_serviceDesc, srv)
}

func _CalculationService_CalculateOptimalPath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculationRequestBody)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculationServiceServer).CalculateOptimalPath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CalculationService/CalculateOptimalPath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculationServiceServer).CalculateOptimalPath(ctx, req.(*CalculationRequestBody))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalculationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.CalculationService",
	HandlerType: (*CalculationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CalculateOptimalPath",
			Handler:    _CalculationService_CalculateOptimalPath_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculation.proto",
}
